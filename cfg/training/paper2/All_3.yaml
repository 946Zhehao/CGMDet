# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors: 4
#  - [10,13, 16,30, 33,23]  # P3/8
#  - [30,61, 62,45, 59,119]  # P4/16
#  - [116,90, 156,198, 373,326]  # P5/32

# yolov7-tiny backbone
backbone:
  # [from, number, module, args] c2, k=1, s=1, p=None, g=1, act=True
  [[-1, 1, Conv, [32, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  # 0-P1

   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],

   [-1, 1, DM, [128, nn.LeakyReLU(0.1)]],  # 2
   [-1, 1, EFEM, [128, nn.LeakyReLU(0.1)]],  # 3-P2

   [ -1, 1, DM, [ 256, nn.LeakyReLU(0.1) ] ],  # 4
   [ -1, 1, EFEM, [ 256, nn.LeakyReLU(0.1) ] ],  # 5-P3

   [ -1, 1, DM, [ 512, nn.LeakyReLU(0.1) ] ],  # 6
   [ -1, 1, EFEM, [ 512, nn.LeakyReLU(0.1) ] ],  # 7-P4

   [ -1, 1, DM, [ 512, nn.LeakyReLU(0.1) ] ],  # 8
   [ -1, 1, EFEM, [ 512, nn.LeakyReLU(0.1) ] ],  # 9-P5
  ]

# yolov7-tiny head
head:
  [[-1, 1, PSPP, [256, nn.LeakyReLU(0.1)]],          # 10

   # ---------------------------------------------------------------
   [ -1, 1, Conv, [ 128, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ],
   [ 7, 1, Conv, [ 128, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ], # route backbone P4
   [ 5, 1, Conv, [ 128, 3, 2, None, 1, nn.LeakyReLU(0.1) ] ],
   [ [ -1, -2, -3 ], 1, Concat, [ 1 ] ],

   [ -1, 1, Conv, [ 128, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],

   [ -1, 1, Mask, [ 1, nn.LeakyReLU(0.1) ] ],                                  # 17

   [ [ -1, -2 ], 1, Fusion, [ 128 ] ],                                         # 18

   [ -1, 1, Conv, [ 384, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],

   [ -1, 1, SplitFeature, [ 128, 1, 0, 3 ] ],                                      # P3 20
   [ -2, 1, SplitFeature, [ 128, 1, 1, 3 ] ],                                      # P4 21
   [ -3, 1, SplitFeature, [ 128, 1, 2, 3 ] ],                                      # P5 22

   [ 20, 1, Conv, [ 128, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ],
   [ [ -1, 5 ], 1, Concat, [ 1 ] ],                                           # P3' 25
   [ 21, 1, Conv, [ 256, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ [ -1, 7 ], 1, Concat, [ 1 ] ],                                           # P4' 27
   [ 22, 1, Conv, [ 256, 3, 2, None, 1, nn.LeakyReLU(0.1) ] ],
   [ [ -1, 10 ], 1, Concat, [ 1 ] ],                                          # P5' 29
   # ---------------------------------------------------------------

   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [27, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # route backbone P4'
   [[-1, -2], 1, Concat, [1]],

   [ -1, 1, Conv, [ 64, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -2, 1, Conv, [ 64, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 64, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 64, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ [ -1, -2, -3, -4 ], 1, Concat, [ 1 ] ],
   [ -1, 1, Conv, [ 128, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],  # 39

   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [25, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # route backbone P3'
   [[-1, -2], 1, Concat, [1]],

   [ -1, 1, Conv, [ 32, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -2, 1, Conv, [ 32, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 32, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 32, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ [ -1, -2, -3, -4 ], 1, Concat, [ 1 ] ],
   [ -1, 1, Conv, [ 64, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],  # 49

   [-1, 1, Conv, [128, 3, 2, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, 39], 1, Concat, [1]],

   [ -1, 1, Conv, [ 64, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -2, 1, Conv, [ 64, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 64, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 64, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ [ -1, -2, -3, -4 ], 1, Concat, [ 1 ] ],
   [ -1, 1, Conv, [ 128, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],  # 57

   [-1, 1, Conv, [256, 3, 2, None, 1, nn.LeakyReLU(0.1)]],
   [29, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],
   [[-1, -2], 1, Concat, [1]],

   [ -1, 1, Conv, [ 128, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -2, 1, Conv, [ 128, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 128, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 128, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ [ -1, -2, -3, -4 ], 1, Concat, [ 1 ] ],
   [ -1, 1, Conv, [ 256, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],  # 66

   [49, 1, Conv, [128, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [57, 1, Conv, [256, 3, 1, None, 1, nn.LeakyReLU(0.1)]],
   [66, 1, Conv, [512, 3, 1, None, 1, nn.LeakyReLU(0.1)]],

   [ 49, 1, Conv, [ 64, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ],
   [ 3, 1, Conv, [ 64, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ [ -1, -2 ], 1, Concat, [ 1 ] ],

   [ -1, 1, Conv, [ 64, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -2, 1, Conv, [ 64, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 64, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ -1, 1, Conv, [ 64, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],
   [ [ -1, -2, -3, -4 ], 1, Concat, [ 1 ] ],
   [ -1, 1, Conv, [ 128, 1, 1, None, 1, nn.LeakyReLU(0.1) ] ],  # 79
   [ -1, 1, Conv, [ 64, 3, 1, None, 1, nn.LeakyReLU(0.1) ] ],  # 80

   [[80,67,68,69], 1, IDetect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
